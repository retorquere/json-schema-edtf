// see https://rawgit.com/zaggino/z-schema/master/benchmark/results.html for a list of schema engines

import { parse } from 'edtf'

export function validate(date, options) {
  if (typeof date !== 'string') return false

  try {
    parse(date, options)
    return true
  } catch (err) {
    return false
  }
}

/**
 * Formats to be used in `{ type: 'string', format: 'edtf/level-1' }` type JSON schemas
 */
<%_
  const formats = []
  for (const seasonIntervals of [false, true]) {
    for (const level of [0, 1, 2]) {
      formats.push({
        format: `edtf/level-${level}${seasonIntervals ? '+season-intervals' : '' }`,
        level,
        seasonIntervals,
      })
    }
  }
_%>
export type Format = <%- formats.map(f => `'${f.format}'`).join(' | ') %>
export type Validator = (date: string) => boolean
export const formats: Record<Format, Validator> = {
  <%_ for (const format of formats) { _%>
  '<%= format.format %>': (date: string) => validate(date, { level: <%= format.level %><%= format.seasonIntervals ? ', seasonIntervals: true' : ''%> }),
<%_ } _%>
}
